{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {        
    },
    "variables": {  
        "storageAccountName": "[concat('stor', uniqueString(resourceGroup().id))]",
        "hostingPlanName": "[concat('plan', uniqueString(resourceGroup().id))]",
        "functionAppName": "[concat('func', uniqueString(resourceGroup().id))]",
        "logicAppName": "[concat('logi', uniqueString(resourceGroup().id))]"         
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2016-01-01",
            "name": "[variables('storageAccountName')]",
            "kind": "Storage",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        },
        {  
		    "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
	    	"name": "[variables('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "properties": {
                "name": "[variables('functionAppName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "cors": {
                        "allowedOrigins": ["*"]
                    },
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        }, 
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
                        }, 
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",      
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "functionshare"
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2015-08-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', variables('functionAppName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "https://github.com/seesharprun/IntegrationExampleFunction.git",
                        "branch": "master",
                        "IsManualIntegration": true
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2016-10-01",
            "name": "[variables('logicAppName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Response": {
                            "inputs": {
                                "body": "@body('StoreJSON')",
                                "statusCode": "@outputs('StoreJSON')['statusCode']"
                            },
                            "runAfter": {
                                "StoreJSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response"
                        },
                        "StoreJSON": {
                            "inputs": {
                                "body": "@triggerBody()",
                                "function": {
                                    "id": "[concat(resourceId('Microsoft.Web/sites', variables('functionAppName')), '/functions/StoreJSON')]"
                                }
                            },
                            "runAfter": {},
                            "type": "Function"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {},
                    "triggers": {
                        "HttpRequest": {
                            "inputs": {
                                "schema": {}
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {},
                "state": "Enabled"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]",
                "[resourceId('Microsoft.Web/sites/sourcecontrols', variables('functionAppName'), 'web')]"
            ]
        }
    ],    
    "outputs": {
        "LogicAppTriggerURL": {
            "type": "string",
            "value": "[listCallbackURL(resourceId('Microsoft.Logic/workflows/triggers', variables('logicAppName'), 'HttpRequest'), '2016-06-01').value]"
        }
    }
}
